package ru.oparin.troyka.service.telegram;

import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Service;
import reactor.core.publisher.Mono;
import ru.oparin.troyka.config.properties.GenerationProperties;
import ru.oparin.troyka.model.dto.fal.ImageRq;
import ru.oparin.troyka.model.dto.telegram.TelegramMessage;
import ru.oparin.troyka.model.dto.telegram.TelegramPhoto;
import ru.oparin.troyka.model.dto.telegram.TelegramUpdate;
import ru.oparin.troyka.model.entity.User;
import ru.oparin.troyka.repository.UserRepository;
import ru.oparin.troyka.service.FalAIService;
import ru.oparin.troyka.service.ImageGenerationHistoryService;
import ru.oparin.troyka.service.UserPointsService;

import java.util.List;

/**
 * –û—Å–Ω–æ–≤–Ω–æ–π —Å–µ—Ä–≤–∏—Å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å Telegram –±–æ—Ç–æ–º.
 * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—ã –∏ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.
 */
@RequiredArgsConstructor
@Service
@Slf4j
public class TelegramBotService {

    private final UserRepository userRepository;
    private final TelegramBotSessionService telegramBotSessionService;
    private final UserPointsService userPointsService;
    private final FalAIService falAIService;
    private final TelegramMessageService telegramMessageService;
    private final ImageGenerationHistoryService imageGenerationHistoryService;
    private final TelegramFileService telegramFileService;
    private final GenerationProperties generationProperties;

    @Value("${telegram.bot.token}")
    private String botToken;

    @Value("${telegram.bot.username}")
    private String botUsername;

    /**
     * –û–±—Ä–∞–±–æ—Ç–∞—Ç—å –∫–æ–º–∞–Ω–¥—É /start.
     *
     * @param chatId     ID —á–∞—Ç–∞
     * @param telegramId ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ Telegram
     * @param username   –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ Telegram
     */
    public Mono<Void> handleStartCommand(Long chatId, Long telegramId, String username, String firstName, String lastName) {
        log.info("–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start –¥–ª—è —á–∞—Ç–∞ {} –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {}", chatId, telegramId);

        return userRepository.findByTelegramId(telegramId)
                .flatMap(user -> {
                    // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω
                    return sendMessage(chatId, String.format(
                            """
                                    üëã *–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –æ–±—Ä–∞—Ç–Ω–æ, %s!*
                                    
                                    üé® –í–∞—à –∞–∫–∫–∞—É–Ω—Ç —É–∂–µ –ø—Ä–∏–≤—è–∑–∞–Ω –∫ Telegram.
                                    –í—ã –º–æ–∂–µ—Ç–µ –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø—Ä—è–º–æ –∑–¥–µ—Å—å!
                                    
                                    üìù *–ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:*
                                    ‚Ä¢ –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ
                                    ‚Ä¢ –ü—Ä–∏–ª–æ–∂–∏—Ç–µ —Ñ–æ—Ç–æ + –æ–ø–∏—Å–∞–Ω–∏–µ
                                    
                                    üí∞ *–°—Ç–æ–∏–º–æ—Å—Ç—å:* %s –ø–æ–∏–Ω—Ç–∞ –∑–∞ 1 –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
                                    ‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /help –¥–ª—è —Å–ø—Ä–∞–≤–∫–∏
                                    """, user.getUsername(), generationProperties.getPointsPerImage()
                    ));
                })
                .switchIfEmpty(Mono.defer(() -> {
                    // –ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å - —Å–æ–∑–¥–∞–µ–º –∞–∫–∫–∞—É–Ω—Ç
                    return createUserFromTelegram(telegramId, username, firstName, lastName)
                            .flatMap(user -> userRepository.save(user)
                                    .flatMap(savedUser -> userPointsService.addPointsToUser(savedUser.getId(), generationProperties.getPointsOnRegistration())
                                            .then(telegramBotSessionService.getOrCreateTelegramBotSession(savedUser.getId(), chatId))
                                            .then(sendWelcomeMessage(chatId, savedUser.getUsername()))));
                }))
                .doOnSuccess(v -> log.info("–ö–æ–º–∞–Ω–¥–∞ /start –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞ –¥–ª—è —á–∞—Ç–∞ {}", chatId))
                .doOnError(error -> log.error("–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–∞–Ω–¥—ã /start –¥–ª—è —á–∞—Ç–∞ {}", chatId, error));
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç–∞—Ç—å –∫–æ–º–∞–Ω–¥—É /help.
     *
     * @param chatId ID —á–∞—Ç–∞
     */
    public Mono<Void> handleHelpCommand(Long chatId) {
        log.info("–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /help –¥–ª—è —á–∞—Ç–∞ {}", chatId);

        String helpMessage = String.format("""
                ü§ñ *–°–ø—Ä–∞–≤–∫–∞ –ø–æ –±–æ—Ç—É 24reshai*
                
                üìù *–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:*
                ‚Ä¢ /start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º
                ‚Ä¢ /help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É
                ‚Ä¢ /balance - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –±–∞–ª–∞–Ω—Å –ø–æ–∏–Ω—Ç–æ–≤
                
                üé® *–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π:*
                ‚Ä¢ –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ
                ‚Ä¢ –ò–ª–∏ –ø—Ä–∏–ª–æ–∂–∏—Ç–µ —Ñ–æ—Ç–æ —Å –ø–æ–¥–ø–∏—Å—å—é
                ‚Ä¢ –ö–∞–∂–¥–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è —Å—Ç–æ–∏—Ç %s –ø–æ–∏–Ω—Ç–æ–≤
                ‚Ä¢ –†–µ–∑—É–ª—å—Ç–∞—Ç –≥–æ—Ç–æ–≤ –∑–∞ 5-10 —Å–µ–∫—É–Ω–¥
                
                üí° *–°–æ–≤–µ—Ç—ã:*
                ‚Ä¢ –ß–µ–º –ø–æ–¥—Ä–æ–±–Ω–µ–µ –æ–ø–∏—Å–∞–Ω–∏–µ, —Ç–µ–º –ª—É—á—à–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç
                ‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Ä–µ—Ñ–µ—Ä–µ–Ω—Å—ã
                
                üåê *–°–∞–π—Ç:* https://24reshai.ru
                """, generationProperties.getPointsPerImage());

        return sendMessage(chatId, helpMessage)
                .doOnSuccess(v -> log.info("–ö–æ–º–∞–Ω–¥–∞ /help –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞ –¥–ª—è —á–∞—Ç–∞ {}", chatId))
                .doOnError(error -> log.error("–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–∞–Ω–¥—ã /help –¥–ª—è —á–∞—Ç–∞ {}", chatId, error));
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç–∞—Ç—å –∫–æ–º–∞–Ω–¥—É /balance.
     *
     * @param chatId     ID —á–∞—Ç–∞
     * @param telegramId ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ Telegram
     */
    public Mono<Void> handleBalanceCommand(Long chatId, Long telegramId) {
        log.info("–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /balance –¥–ª—è —á–∞—Ç–∞ {} –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {}", chatId, telegramId);

        return userRepository.findByTelegramId(telegramId)
                .switchIfEmpty(Mono.defer(() -> {
                    return sendMessage(chatId, "‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.")
                            .then(Mono.empty());
                }))
                .flatMap(user -> userPointsService.getUserPoints(user.getId())
                        .map(points -> String.format(
                                """
                                        üí∞ *–í–∞—à –±–∞–ª–∞–Ω—Å –ø–æ–∏–Ω—Ç–æ–≤*
                                        
                                        üî¢ *–¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å:* %d –ø–æ–∏–Ω—Ç–æ–≤
                                        üé® *–î–æ—Å—Ç—É–ø–Ω–æ –≥–µ–Ω–µ—Ä–∞—Ü–∏–π:* %d
                                        
                                        üí≥ *–ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å:* https://24reshai.ru/pricing
                                        """, points, points / generationProperties.getPointsPerImage()
                        ))
                        .flatMap(message -> sendMessage(chatId, message)))
                .doOnSuccess(v -> log.info("–ö–æ–º–∞–Ω–¥–∞ /balance –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞ –¥–ª—è —á–∞—Ç–∞ {}", chatId))
                .doOnError(error -> log.error("–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–∞–Ω–¥—ã /balance –¥–ª—è —á–∞—Ç–∞ {}", chatId, error));
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç–∞—Ç—å —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ (–ø—Ä–æ–º–ø—Ç –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏).
     *
     * @param chatId     ID —á–∞—Ç–∞
     * @param telegramId ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ Telegram
     * @param prompt     –ø—Ä–æ–º–ø—Ç –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
     */
    public Mono<Void> handleTextMessage(Long chatId, Long telegramId, String prompt) {
        return handleTextMessage(chatId, telegramId, prompt, List.of());
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç–∞—Ç—å —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –≤—Ö–æ–¥–Ω—ã–º–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏.
     *
     * @param chatId         ID —á–∞—Ç–∞
     * @param telegramId     ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ Telegram
     * @param prompt         –ø—Ä–æ–º–ø—Ç –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
     * @param inputImageUrls —Å–ø–∏—Å–æ–∫ URL –≤—Ö–æ–¥–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
     */
    public Mono<Void> handleTextMessage(Long chatId, Long telegramId, String prompt, List<String> inputImageUrls) {
        log.info("–û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è —á–∞—Ç–∞ {} –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {}: {} (–≤—Ö–æ–¥–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: {})",
                chatId, telegramId, prompt, inputImageUrls.size());

        return userRepository.findByTelegramId(telegramId)
                .switchIfEmpty(Mono.defer(() -> {
                    return sendMessage(chatId, "‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.")
                            .then(Mono.empty());
                }))
                .flatMap(user -> {
                    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–ª–∞–Ω—Å
                    return userPointsService.getUserPoints(user.getId())
                            .flatMap(points -> {
                                int requiredPoints = generationProperties.getPointsPerImage();
                                if (points < requiredPoints) {
                                    return sendMessage(chatId,
                                            "‚ùå *–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø–æ–∏–Ω—Ç–æ–≤*\n\n" +
                                                    "üí∞ *–¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å:* " + points + " –ø–æ–∏–Ω—Ç–æ–≤\n" +
                                                    "üé® *–¢—Ä–µ–±—É–µ—Ç—Å—è:* " + requiredPoints + " –ø–æ–∏–Ω—Ç–æ–≤ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏\n\n" +
                                                    "üí≥ *–ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å:* https://24reshai.ru/pricing");
                                }

                                // –ü–æ–ª—É—á–∞–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω—É—é —Å–µ—Å—Å–∏—é
                                return telegramBotSessionService.getOrCreateTelegramBotSession(user.getId(), chatId)
                                        .flatMap(session -> {
                                            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º typing indicator –∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–∞—á–∞–ª–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
                                            String generationMessage = inputImageUrls.isEmpty()
                                                    ? "üé® *–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è...*\n\nüìù *–ü—Ä–æ–º–ø—Ç:* " + prompt + "\n‚è±Ô∏è *–û–∂–∏–¥–∞–π—Ç–µ 5-10 —Å–µ–∫—É–Ω–¥*"
                                                    : "üé® *–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è...*\n\nüìù *–ü—Ä–æ–º–ø—Ç:* " + prompt + "\n‚è±Ô∏è *–û–∂–∏–¥–∞–π—Ç–µ 5-10 —Å–µ–∫—É–Ω–¥*";

                                            return telegramMessageService.sendTypingAction(chatId)
                                                    .then(sendMessage(chatId, generationMessage))
                                                    .then(generateImage(user.getId(), session.getId(), prompt, inputImageUrls));
                                        });
                            });
                })
                .doOnSuccess(v -> log.info("–¢–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ –¥–ª—è —á–∞—Ç–∞ {}", chatId))
                .doOnError(error -> log.error("–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è —á–∞—Ç–∞ {}", chatId, error));
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç–∞—Ç—å —Ñ–æ—Ç–æ —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º.
     *
     * @param chatId     ID —á–∞—Ç–∞
     * @param telegramId ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ Telegram
     * @param photoUrl   URL —Ñ–æ—Ç–æ
     * @param caption    –æ–ø–∏—Å–∞–Ω–∏–µ —Ñ–æ—Ç–æ
     */
    public Mono<Void> handlePhotoMessage(Long chatId, Long telegramId, String photoUrl, String caption) {
        log.info("–û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ç–æ –¥–ª—è —á–∞—Ç–∞ {} –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {}: {}", chatId, telegramId, caption);

        return userRepository.findByTelegramId(telegramId)
                .switchIfEmpty(Mono.defer(() -> {
                    return sendMessage(chatId, "‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.")
                            .then(Mono.empty());
                }))
                .flatMap(user -> {
                    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–ª–∞–Ω—Å
                    return userPointsService.getUserPoints(user.getId())
                            .flatMap(points -> {
                                int requiredPoints = generationProperties.getPointsPerImage();
                                if (points < requiredPoints) {
                                    return sendMessage(chatId, String.format(
                                            """
                                                    ‚ùå *–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø–æ–∏–Ω—Ç–æ–≤*
                                                    
                                                    üí∞ *–¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å:* %s –ø–æ–∏–Ω—Ç–æ–≤
                                                    üé® *–¢—Ä–µ–±—É–µ—Ç—Å—è:* %s –ø–æ–∏–Ω—Ç–æ–≤ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
                                                    
                                                    üí≥ *–ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å:* https://24reshai.ru/pricing
                                                    """, points, requiredPoints));
                                }

                                // –ü–æ–ª—É—á–∞–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω—É—é —Å–µ—Å—Å–∏—é
                                return telegramBotSessionService.getOrCreateTelegramBotSession(user.getId(), chatId)
                                        .flatMap(session -> {
                                            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º typing indicator –∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–∞—á–∞–ª–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
                                            return telegramMessageService.sendTypingAction(chatId)
                                                    .then(sendMessage(chatId, String.format(
                                                            """
                                                                    üé® *–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å —Ä–µ—Ñ–µ—Ä–µ–Ω—Å–æ–º...*
                                                                    
                                                                    üìù *–ü—Ä–æ–º–ø—Ç:* %s
                                                                    üñºÔ∏è *–†–µ—Ñ–µ—Ä–µ–Ω—Å:* –∑–∞–≥—Ä—É–∂–µ–Ω
                                                                    ‚è±Ô∏è *–û–∂–∏–¥–∞–π—Ç–µ 5-10 —Å–µ–∫—É–Ω–¥*
                                                                    """, caption)))
                                                    .then(generateImage(user.getId(), session.getId(), caption, List.of(photoUrl)));
                                        });
                            });
                })
                .doOnSuccess(v -> log.info("–§–æ—Ç–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ –¥–ª—è —á–∞—Ç–∞ {}", chatId))
                .doOnError(error -> log.error("–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ñ–æ—Ç–æ –¥–ª—è —á–∞—Ç–∞ {}", chatId, error));
    }

    /**
     * –°–æ–∑–¥–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –¥–∞–Ω–Ω—ã—Ö Telegram.
     */
    private Mono<User> createUserFromTelegram(Long telegramId, String username, String firstName, String lastName) {
        return Mono.fromCallable(() -> {
            String generatedUsername = username != null ? username : "tg_" + telegramId;
            String fullName = firstName != null
                    ? (lastName != null ? firstName + " " + lastName : firstName)
                    : username != null ? username : "tg_" + telegramId;

            return User.builder()
                    .username(generatedUsername)
                    .email(null) // –î–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ Telegram email –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è
                    .password("telegram_auth_" + telegramId) // –í—Ä–µ–º–µ–Ω–Ω—ã–π –ø–∞—Ä–æ–ª—å
                    .emailVerified(false) // –£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –±–µ–∑ email –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è
                    .telegramId(telegramId)
                    .telegramUsername(username)
                    .telegramFirstName(fullName)
                    .build();
        });
    }

    /**
     * –ì–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ.
     */
    private Mono<Void> generateImage(Long userId, Long sessionId, String prompt, List<String> inputImageUrls) {
        return generateImage(userId, sessionId, prompt, prompt, inputImageUrls);
    }

    /**
     * –ì–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å –æ—Ç–¥–µ–ª—å–Ω—ã–º –ø—Ä–æ–º–ø—Ç–æ–º –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è.
     */
    private Mono<Void> generateImage(Long userId, Long sessionId, String prompt, String displayPrompt, List<String> inputImageUrls) {
        log.info("–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {} –≤ —Å–µ—Å—Å–∏–∏ {} —Å –ø—Ä–æ–º–ø—Ç–æ–º: {}", userId, sessionId, prompt);

        // –°–æ–∑–¥–∞–µ–º –∑–∞–ø—Ä–æ—Å –¥–ª—è FAL AI
        ImageRq imageRq = ImageRq.builder()
                .prompt(prompt)
                .sessionId(sessionId)
                .numImages(1)
                .inputImageUrls(inputImageUrls)
                .build();

        return falAIService.getImageResponse(imageRq, userId)
                .flatMap(imageResponse -> {
                    // –ü–æ–ª—É—á–∞–µ–º chatId –∏–∑ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–π —Å–µ—Å—Å–∏–∏
                    return telegramBotSessionService.getTelegramBotSessionEntityByUserId(userId)
                            .flatMap(telegramBotSession -> {
                                Long chatId = telegramBotSession.getChatId();

                                // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
                                if (imageResponse.getImageUrls().isEmpty()) {
                                    return telegramMessageService.sendErrorMessage(chatId, "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.");
                                }

                                // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–µ—Ä–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å –ø–æ–¥–ø–∏—Å—å—é
                                String caption = String.format(
                                        """
                                                üé® *–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ!*
                                                
                                                üìù *–ü—Ä–æ–º–ø—Ç:* %s
                                                üí∞ *–°—Ç–æ–∏–º–æ—Å—Ç—å:* %s –ø–æ–∏–Ω—Ç–∞
                                                
                                                üîÑ *–•–æ—Ç–∏—Ç–µ –µ—â–µ?* –ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ!
                                                """,
                                        displayPrompt, generationProperties.getPointsPerImage()
                                );

                                return telegramMessageService.sendPhotoWithMessageId(chatId, imageResponse.getImageUrls().get(0), caption)
                                        .flatMap(messageId -> {
                                            log.info("–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ messageId {} –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {}", messageId, userId);
                                            return telegramBotSessionService.updateLastGeneratedMessageId(userId, messageId)
                                                    .then(Mono.just(messageId));
                                        })
                                        .then();
                            });
                })
                .onErrorResume(error -> {
                    log.error("–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {}: {}", userId, error.getMessage());
                    return telegramBotSessionService.getTelegramBotSessionEntityByUserId(userId)
                            .flatMap(telegramBotSession -> {
                                Long chatId = telegramBotSession.getChatId();
                                // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
                                return sendMessage(chatId, """
                                        ‚ùå *–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏*
                                        –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.""")
                                        .then();
                            });
                });
    }


    /**
     * –û—Ç–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.
     */
    private Mono<Void> sendWelcomeMessage(Long chatId, String username) {
        String message = String.format(
                """
                        üéâ *–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ 24reshai, %s!*
                        
                        üé® –í—ã –ø–æ–ª—É—á–∏–ª–∏ %s –ø–æ–∏–Ω—Ç–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏!
                        üöÄ –¢–µ–ø–µ—Ä—å –º–æ–∂–µ—Ç–µ –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø—Ä—è–º–æ –∑–¥–µ—Å—å!
                        
                        üìù *–ö–∞–∫ –Ω–∞—á–∞—Ç—å:*
                        ‚Ä¢ –û—Ç–ø—Ä–∞–≤—å—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
                        ‚Ä¢ –ò–ª–∏ –ø—Ä–∏–ª–æ–∂–∏—Ç–µ —Ñ–æ—Ç–æ + –æ–ø–∏—Å–∞–Ω–∏–µ
                        
                        üí∞ *–°—Ç–æ–∏–º–æ—Å—Ç—å:* %s –ø–æ–∏–Ω—Ç–∞ –∑–∞ 1 –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
                        üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /help –¥–ª—è —Å–ø—Ä–∞–≤–∫–∏
                        """,
                username, generationProperties.getPointsOnRegistration(), generationProperties.getPointsPerImage()
        );

        return sendMessage(chatId, message);
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç–∞—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç Telegram.
     *
     * @param update –æ–±—ä–µ–∫—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –æ—Ç Telegram
     * @return —Ä–µ–∑—É–ª—å—Ç–∞—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏
     */
    public Mono<Void> processUpdate(TelegramUpdate update) {
        log.info("–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –æ—Ç Telegram: {}", update);

        if (update.getMessage() == null) {
            log.debug("–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏—è, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º");
            return Mono.empty();
        }

        TelegramMessage message = update.getMessage();
        Long chatId = message.getChat().getId();
        Long telegramId = message.getFrom().getId();
        String username = message.getFrom().getUsername();
        String firstName = message.getFrom().getFirstName();
        String lastName = message.getFrom().getLastName();

        log.debug("–û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {} –≤ —á–∞—Ç–µ {}: {}", telegramId, chatId,
                message.getText() != null ? message.getText() : "–º–µ–¥–∏–∞");

        try {
            // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–≤–µ—Ç–æ–≤ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è (–¥–∏–∞–ª–æ–≥ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏)
            if (message.getReplyToMessage() != null) {
                return handleReplyMessage(chatId, telegramId, message);
            }

            // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥
            if (message.getText() != null && message.getText().startsWith("/")) {
                return handleCommand(chatId, telegramId, username, firstName, lastName, message.getText());
            }

            // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ç–æ —Å –ø–æ–¥–ø–∏—Å—å—é
            if (message.getPhoto() != null && !message.getPhoto().isEmpty() && message.getCaption() != null) {
                TelegramPhoto photo = message.getPhoto().get(message.getPhoto().size() - 1); // –ë–µ—Ä–µ–º —Ñ–æ—Ç–æ –Ω–∞–∏–±–æ–ª—å—à–µ–≥–æ —Ä–∞–∑–º–µ—Ä–∞
                // –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–æ–∫—Å–∏ URL –≤–º–µ—Å—Ç–æ –ø—Ä—è–º–æ–≥–æ URL –æ—Ç Telegram
                String proxyUrl = "https://24reshai.ru/api/telegram/proxy/" + photo.getFileId();
                return handlePhotoMessage(chatId, telegramId, proxyUrl, message.getCaption())
                        .onErrorResume(error -> {
                            log.error("–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ñ–æ—Ç–æ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {}: {}", telegramId, error.getMessage());
                            return sendMessage(chatId, "‚ùå *–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ*\n\n–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.");
                        });
            }

            // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è (–ø—Ä–æ–º–ø—Ç)
            if (message.getText() != null && !message.getText().trim().isEmpty()) {
                return handleTextMessage(chatId, telegramId, message.getText());
            }

            // –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø —Å–æ–æ–±—â–µ–Ω–∏—è
            log.debug("–ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–≥–æ —Ç–∏–ø–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {} –≤ —á–∞—Ç–µ {}", telegramId, chatId);
            return sendMessage(chatId, """
                    ü§î *–ù–µ –ø–æ–Ω–∏–º–∞—é*
                    
                    –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–ª–∏ —Ñ–æ—Ç–æ —Å –ø–æ–¥–ø–∏—Å—å—é.
                    """);

        } catch (Exception error) {
            log.error("–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {} –≤ —á–∞—Ç–µ {}: {}", telegramId, chatId, error.getMessage(), error);
            return sendMessage(chatId, """
                    ‚ùå *–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞*
                    
                    –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É: https://24reshai.ru/contacts
                    """);
        }
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç–∞—Ç—å –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ (–¥–∏–∞–ª–æ–≥ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏).
     *
     * @param chatId     ID —á–∞—Ç–∞
     * @param telegramId ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ Telegram
     * @param message    —Å–æ–æ–±—â–µ–Ω–∏–µ-–æ—Ç–≤–µ—Ç
     * @return —Ä–µ–∑—É–ª—å—Ç–∞—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏
     */
    private Mono<Void> handleReplyMessage(Long chatId, Long telegramId, TelegramMessage message) {
        log.info("–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {} –≤ —á–∞—Ç–µ {}", telegramId, chatId);

        TelegramMessage replyToMessage = message.getReplyToMessage();
        Long replyToMessageId = replyToMessage.getMessageId();

        // –°–Ω–∞—á–∞–ª–∞ –Ω–∞—Ö–æ–¥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ Telegram ID, –∑–∞—Ç–µ–º –∏—â–µ–º lastGeneratedMessageId
        return userRepository.findByTelegramId(telegramId)
                .switchIfEmpty(Mono.error(new RuntimeException("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å Telegram ID " + telegramId + " –Ω–µ –Ω–∞–π–¥–µ–Ω")))
                .flatMap(user -> {
                    log.info("–ù–∞–π–¥–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –±–∞–∑–µ: ID={}, Telegram ID={}", user.getId(), user.getTelegramId());
                    return telegramBotSessionService.getLastGeneratedMessageId(user.getId())
                            .flatMap(lastGeneratedMessageId -> {
                                log.info("–ü–æ–ª—É—á–µ–Ω lastGeneratedMessageId –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {}: {}, replyToMessageId: {}",
                                        user.getId(), lastGeneratedMessageId, replyToMessageId);

                                if (!replyToMessageId.equals(lastGeneratedMessageId)) {
                                    log.warn("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {} –æ—Ç–≤–µ—Ç–∏–ª –Ω–∞ —Å—Ç–∞—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: {} != {}",
                                            user.getId(), replyToMessageId, lastGeneratedMessageId);
                                    return sendMessage(chatId, "‚ùå *–ù–µ–ª—å–∑—è –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ —Å—Ç–∞—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ*\n\n" +
                                            "–û—Ç–≤–µ—á–∞–π—Ç–µ —Ç–æ–ª—å–∫–æ –Ω–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ.");
                                }

                                // –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–µ–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑ Telegram —Å–µ—Å—Å–∏–∏
                                return telegramBotSessionService.getTelegramBotSessionByUserId(user.getId())
                                        .flatMap(session -> imageGenerationHistoryService.getLastGeneratedImageUrlFromSession(user.getId(), session.getId()))
                                        .flatMap(previousImageUrl -> {
                                            String newPrompt = message.getText();
                                            if (newPrompt == null || newPrompt.trim().isEmpty()) {
                                                return sendMessage(chatId, "‚ùå *–ü—É—Å—Ç–æ–π –∑–∞–ø—Ä–æ—Å*\n\n" +
                                                        "–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è.");
                                            }

                                            // –î–ª—è FAL AI –∏—Å–ø–æ–ª—å–∑—É–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –ø—Ä–æ–º–ø—Ç, –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è - –∫—Ä–∞—Å–∏–≤—ã–π —Ñ–æ—Ä–º–∞—Ç
                                            String displayPrompt = String.format("<–∏—Å—Ö–æ–¥–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ> %s", newPrompt);

                                            log.info("–î–∏–∞–ª–æ–≥ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {} –∏–∑–º–µ–Ω–∏–ª –ø—Ä–æ–º–ø—Ç –Ω–∞ '{}'", user.getId(), displayPrompt);

                                            // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –Ω–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å –ø—Ä–µ–¥—ã–¥—É—â–∏–º –∫–∞–∫ input
                                            return telegramBotSessionService.getOrCreateTelegramBotSession(user.getId(), chatId)
                                                    .flatMap(session -> generateImage(user.getId(), session.getId(), newPrompt, displayPrompt, List.of(previousImageUrl)));
                                        });
                            });
                });
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç–∞—Ç—å –∫–æ–º–∞–Ω–¥—ã.
     */
    private Mono<Void> handleCommand(Long chatId, Long userId, String username, String firstName, String lastName, String command) {
        return switch (command) {
            case "/start" -> handleStartCommand(chatId, userId, username, firstName, lastName);
            case "/help" -> handleHelpCommand(chatId);
            case "/balance" -> handleBalanceCommand(chatId, userId);
            default -> handleUnknownCommand(chatId, command);
        };
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç–∞—Ç—å –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—É—é –∫–æ–º–∞–Ω–¥—É.
     */
    private Mono<Void> handleUnknownCommand(Long chatId, String command) {
        log.info("–ü–æ–ª—É—á–µ–Ω–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: {} –≤ —á–∞—Ç–µ {}", command, chatId);

        return sendMessage(chatId, String.format(
                """
                        ‚ùì *–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞*
                        
                        ü§ñ *–ö–æ–º–∞–Ω–¥–∞:* %s
                        üìã *–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:*
                        ‚Ä¢ /start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º
                        ‚Ä¢ /balance - –ë–∞–ª–∞–Ω—Å –ø–æ–∏–Ω—Ç–æ–≤
                        ‚Ä¢ /help - –°–ø—Ä–∞–≤–∫–∞
                        
                        üí° *–ò–ª–∏ –ø—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏!*
                        """, command)
        );
    }

    /**
     * –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.
     */
    public Mono<Void> sendMessage(Long chatId, String message) {
        return telegramMessageService.sendMessage(chatId, message);
    }
}
