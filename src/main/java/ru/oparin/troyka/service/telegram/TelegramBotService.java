package ru.oparin.troyka.service.telegram;

import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Service;
import reactor.core.publisher.Mono;
import ru.oparin.troyka.model.entity.User;
import ru.oparin.troyka.repository.UserRepository;
import ru.oparin.troyka.service.FalAIService;
import ru.oparin.troyka.service.UserPointsService;

import java.util.List;

/**
 * –û—Å–Ω–æ–≤–Ω–æ–π —Å–µ—Ä–≤–∏—Å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å Telegram –±–æ—Ç–æ–º.
 * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—ã –∏ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.
 */
@RequiredArgsConstructor
@Service
@Slf4j
public class TelegramBotService {

    private final UserRepository userRepository;
    private final TelegramBotSessionService telegramBotSessionService;
    private final UserPointsService userPointsService;
    private final FalAIService falAIService;

    @Value("${telegram.bot.token}")
    private String botToken;

    @Value("${telegram.bot.username}")
    private String botUsername;

    /**
     * –û–±—Ä–∞–±–æ—Ç–∞—Ç—å –∫–æ–º–∞–Ω–¥—É /start.
     *
     * @param chatId ID —á–∞—Ç–∞
     * @param telegramId ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ Telegram
     * @param username –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ Telegram
     */
    public Mono<Void> handleStartCommand(Long chatId, Long telegramId, String username) {
        log.info("–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start –¥–ª—è —á–∞—Ç–∞ {} –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {}", chatId, telegramId);

        return userRepository.findByTelegramId(telegramId)
                .flatMap(user -> {
                    // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω
                    return sendMessage(chatId, String.format(
                            "üëã *–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –æ–±—Ä–∞—Ç–Ω–æ, %s!*\n\n" +
                            "üé® –í–∞—à –∞–∫–∫–∞—É–Ω—Ç —É–∂–µ –ø—Ä–∏–≤—è–∑–∞–Ω –∫ Telegram.\n" +
                            "–í—ã –º–æ–∂–µ—Ç–µ –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø—Ä—è–º–æ –∑–¥–µ—Å—å!\n\n" +
                            "üìù *–ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:*\n" +
                            "‚Ä¢ –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ\n" +
                            "‚Ä¢ –ü—Ä–∏–ª–æ–∂–∏—Ç–µ —Ñ–æ—Ç–æ + –æ–ø–∏—Å–∞–Ω–∏–µ\n" +
                            "‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /help –¥–ª—è —Å–ø—Ä–∞–≤–∫–∏",
                            user.getUsername()
                    ));
                })
                .switchIfEmpty(Mono.defer(() -> {
                    // –ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å - —Å–æ–∑–¥–∞–µ–º –∞–∫–∫–∞—É–Ω—Ç
                    return createUserFromTelegram(telegramId, username)
                            .flatMap(user -> userRepository.save(user)
                                    .flatMap(savedUser -> userPointsService.addPointsToUser(savedUser.getId(), 6)
                                            .then(telegramBotSessionService.getOrCreateTelegramBotSession(savedUser.getId(), chatId))
                                            .then(sendWelcomeMessage(chatId, savedUser.getUsername()))));
                }))
                .doOnSuccess(v -> log.info("–ö–æ–º–∞–Ω–¥–∞ /start –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞ –¥–ª—è —á–∞—Ç–∞ {}", chatId))
                .doOnError(error -> log.error("–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–∞–Ω–¥—ã /start –¥–ª—è —á–∞—Ç–∞ {}", chatId, error));
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç–∞—Ç—å –∫–æ–º–∞–Ω–¥—É /help.
     *
     * @param chatId ID —á–∞—Ç–∞
     */
    public Mono<Void> handleHelpCommand(Long chatId) {
        log.info("–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /help –¥–ª—è —á–∞—Ç–∞ {}", chatId);

        String helpMessage = "ü§ñ *–°–ø—Ä–∞–≤–∫–∞ –ø–æ –±–æ—Ç—É 24reshai*\n\n" +
                "üìù *–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:*\n" +
                "‚Ä¢ /start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º\n" +
                "‚Ä¢ /help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É\n" +
                "‚Ä¢ /balance - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –±–∞–ª–∞–Ω—Å –ø–æ–∏–Ω—Ç–æ–≤\n" +
                "‚Ä¢ /history - –ò—Å—Ç–æ—Ä–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–π\n" +
                "‚Ä¢ /settings - –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π\n\n" +
                "üé® *–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π:*\n" +
                "‚Ä¢ –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ\n" +
                "‚Ä¢ –ü—Ä–∏–ª–æ–∂–∏—Ç–µ —Ñ–æ—Ç–æ + –æ–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å —Ä–µ—Ñ–µ—Ä–µ–Ω—Å–æ–º\n" +
                "‚Ä¢ –ö–∞–∂–¥–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è —Å—Ç–æ–∏—Ç 3 –ø–æ–∏–Ω—Ç–∞\n\n" +
                "üí° *–°–æ–≤–µ—Ç—ã:*\n" +
                "‚Ä¢ –ë—É–¥—å—Ç–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã –≤ –æ–ø–∏—Å–∞–Ω–∏—è—Ö\n" +
                "‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Ä–µ—Ñ–µ—Ä–µ–Ω—Å—ã\n" +
                "‚Ä¢ –†–µ–∑—É–ª—å—Ç–∞—Ç –≥–æ—Ç–æ–≤ –∑–∞ 5-10 —Å–µ–∫—É–Ω–¥\n\n" +
                "üåê *–°–∞–π—Ç:* https://24reshai.ru";

        return sendMessage(chatId, helpMessage)
                .doOnSuccess(v -> log.info("–ö–æ–º–∞–Ω–¥–∞ /help –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞ –¥–ª—è —á–∞—Ç–∞ {}", chatId))
                .doOnError(error -> log.error("–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–∞–Ω–¥—ã /help –¥–ª—è —á–∞—Ç–∞ {}", chatId, error));
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç–∞—Ç—å –∫–æ–º–∞–Ω–¥—É /balance.
     *
     * @param chatId ID —á–∞—Ç–∞
     * @param telegramId ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ Telegram
     */
    public Mono<Void> handleBalanceCommand(Long chatId, Long telegramId) {
        log.info("–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /balance –¥–ª—è —á–∞—Ç–∞ {} –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {}", chatId, telegramId);

        return userRepository.findByTelegramId(telegramId)
                .switchIfEmpty(Mono.defer(() -> {
                    return sendMessage(chatId, "‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.")
                            .then(Mono.empty());
                }))
                .flatMap(user -> userPointsService.getUserPoints(user.getId())
                        .map(points -> String.format(
                                "üí∞ *–í–∞—à –±–∞–ª–∞–Ω—Å –ø–æ–∏–Ω—Ç–æ–≤*\n\n" +
                                "üî¢ *–¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å:* %d –ø–æ–∏–Ω—Ç–æ–≤\n" +
                                "üé® *–î–æ—Å—Ç—É–ø–Ω–æ –≥–µ–Ω–µ—Ä–∞—Ü–∏–π:* %d\n\n" +
                                "üí≥ *–ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å:* https://24reshai.ru/pricing",
                                points,
                                points / 3
                        ))
                        .flatMap(message -> sendMessage(chatId, message)))
                .doOnSuccess(v -> log.info("–ö–æ–º–∞–Ω–¥–∞ /balance –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞ –¥–ª—è —á–∞—Ç–∞ {}", chatId))
                .doOnError(error -> log.error("–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–∞–Ω–¥—ã /balance –¥–ª—è —á–∞—Ç–∞ {}", chatId, error));
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç–∞—Ç—å –∫–æ–º–∞–Ω–¥—É /history.
     *
     * @param chatId ID —á–∞—Ç–∞
     * @param telegramId ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ Telegram
     */
    public Mono<Void> handleHistoryCommand(Long chatId, Long telegramId) {
        log.info("–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /history –¥–ª—è —á–∞—Ç–∞ {} –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {}", chatId, telegramId);

        return userRepository.findByTelegramId(telegramId)
                .switchIfEmpty(Mono.defer(() -> {
                    return sendMessage(chatId, "‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.")
                            .then(Mono.empty());
                }))
                .flatMap(user -> {
                    // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏—Å—Ç–æ—Ä–∏–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–π
                    // –ü–æ–∫–∞ —á—Ç–æ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–≥–ª—É—à–∫—É
                    return sendMessage(chatId, "üìö *–ò—Å—Ç–æ—Ä–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–π*\n\n" +
                            "üîÑ –§—É–Ω–∫—Ü–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ...\n" +
                            "–ü–æ–∫–∞ —á—Ç–æ –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏—Å—Ç–æ—Ä–∏—é –Ω–∞ —Å–∞–π—Ç–µ: https://24reshai.ru/history");
                })
                .doOnSuccess(v -> log.info("–ö–æ–º–∞–Ω–¥–∞ /history –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞ –¥–ª—è —á–∞—Ç–∞ {}", chatId))
                .doOnError(error -> log.error("–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–∞–Ω–¥—ã /history –¥–ª—è —á–∞—Ç–∞ {}", chatId, error));
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç–∞—Ç—å —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ (–ø—Ä–æ–º–ø—Ç –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏).
     *
     * @param chatId ID —á–∞—Ç–∞
     * @param telegramId ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ Telegram
     * @param prompt –ø—Ä–æ–º–ø—Ç –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
     */
    public Mono<Void> handleTextMessage(Long chatId, Long telegramId, String prompt) {
        log.info("–û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è —á–∞—Ç–∞ {} –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {}: {}", chatId, telegramId, prompt);

        return userRepository.findByTelegramId(telegramId)
                .switchIfEmpty(Mono.defer(() -> {
                    return sendMessage(chatId, "‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.")
                            .then(Mono.empty());
                }))
                .flatMap(user -> {
                    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–ª–∞–Ω—Å
                    return userPointsService.getUserPoints(user.getId())
                            .flatMap(points -> {
                                if (points < 3) {
                                    return sendMessage(chatId, "‚ùå *–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø–æ–∏–Ω—Ç–æ–≤*\n\n" +
                                            "üí∞ *–¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å:* " + points + " –ø–æ–∏–Ω—Ç–æ–≤\n" +
                                            "üé® *–¢—Ä–µ–±—É–µ—Ç—Å—è:* 3 –ø–æ–∏–Ω—Ç–∞ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏\n\n" +
                                            "üí≥ *–ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å:* https://24reshai.ru/pricing");
                                }

                                // –ü–æ–ª—É—á–∞–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω—É—é —Å–µ—Å—Å–∏—é
                                return telegramBotSessionService.getOrCreateTelegramBotSession(user.getId(), chatId)
                                        .flatMap(session -> {
                                            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–∞—á–∞–ª–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
                                            return sendMessage(chatId, "üé® *–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è...*\n\n" +
                                                    "üìù *–ü—Ä–æ–º–ø—Ç:* " + prompt + "\n" +
                                                    "‚è±Ô∏è *–û–∂–∏–¥–∞–π—Ç–µ 5-10 —Å–µ–∫—É–Ω–¥*")
                                                    .then(generateImage(user.getId(), session.getId(), prompt, List.of()));
                                        });
                            });
                })
                .doOnSuccess(v -> log.info("–¢–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ –¥–ª—è —á–∞—Ç–∞ {}", chatId))
                .doOnError(error -> log.error("–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è —á–∞—Ç–∞ {}", chatId, error));
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç–∞—Ç—å —Ñ–æ—Ç–æ —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º.
     *
     * @param chatId ID —á–∞—Ç–∞
     * @param telegramId ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ Telegram
     * @param photoUrl URL —Ñ–æ—Ç–æ
     * @param caption –æ–ø–∏—Å–∞–Ω–∏–µ —Ñ–æ—Ç–æ
     */
    public Mono<Void> handlePhotoMessage(Long chatId, Long telegramId, String photoUrl, String caption) {
        log.info("–û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ç–æ –¥–ª—è —á–∞—Ç–∞ {} –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {}: {}", chatId, telegramId, caption);

        return userRepository.findByTelegramId(telegramId)
                .switchIfEmpty(Mono.defer(() -> {
                    return sendMessage(chatId, "‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.")
                            .then(Mono.empty());
                }))
                .flatMap(user -> {
                    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–ª–∞–Ω—Å
                    return userPointsService.getUserPoints(user.getId())
                            .flatMap(points -> {
                                if (points < 3) {
                                    return sendMessage(chatId, "‚ùå *–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø–æ–∏–Ω—Ç–æ–≤*\n\n" +
                                            "üí∞ *–¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å:* " + points + " –ø–æ–∏–Ω—Ç–æ–≤\n" +
                                            "üé® *–¢—Ä–µ–±—É–µ—Ç—Å—è:* 3 –ø–æ–∏–Ω—Ç–∞ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏\n\n" +
                                            "üí≥ *–ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å:* https://24reshai.ru/pricing");
                                }

                                // –ü–æ–ª—É—á–∞–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω—É—é —Å–µ—Å—Å–∏—é
                                return telegramBotSessionService.getOrCreateTelegramBotSession(user.getId(), chatId)
                                        .flatMap(session -> {
                                            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–∞—á–∞–ª–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
                                            return sendMessage(chatId, "üé® *–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å —Ä–µ—Ñ–µ—Ä–µ–Ω—Å–æ–º...*\n\n" +
                                                    "üìù *–ü—Ä–æ–º–ø—Ç:* " + caption + "\n" +
                                                    "üñºÔ∏è *–†–µ—Ñ–µ—Ä–µ–Ω—Å:* –∑–∞–≥—Ä—É–∂–µ–Ω\n" +
                                                    "‚è±Ô∏è *–û–∂–∏–¥–∞–π—Ç–µ 5-10 —Å–µ–∫—É–Ω–¥*")
                                                    .then(generateImage(user.getId(), session.getId(), caption, List.of(photoUrl)));
                                        });
                            });
                })
                .doOnSuccess(v -> log.info("–§–æ—Ç–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ –¥–ª—è —á–∞—Ç–∞ {}", chatId))
                .doOnError(error -> log.error("–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ñ–æ—Ç–æ –¥–ª—è —á–∞—Ç–∞ {}", chatId, error));
    }

    /**
     * –°–æ–∑–¥–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –¥–∞–Ω–Ω—ã—Ö Telegram.
     */
    private Mono<User> createUserFromTelegram(Long telegramId, String username) {
        return Mono.fromCallable(() -> {
            String email = "telegram_" + telegramId + "@telegram.local";
            String generatedUsername = username != null ? username : "tg_" + telegramId;

            return User.builder()
                    .username(generatedUsername)
                    .email(email)
                    .password("telegram_auth_" + telegramId) // –í—Ä–µ–º–µ–Ω–Ω—ã–π –ø–∞—Ä–æ–ª—å
                    .emailVerified(true) // Telegram –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å—á–∏—Ç–∞—é—Ç—Å—è –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏
                    .telegramId(telegramId)
                    .telegramUsername(username)
                    .telegramFirstName(username)
                    .telegramNotificationsEnabled(true)
                    .build();
        });
    }

    /**
     * –ì–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ.
     */
    private Mono<Void> generateImage(Long userId, Long sessionId, String prompt, List<String> inputImageUrls) {
        // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å FalAIService
        // –ü–æ–∫–∞ —á—Ç–æ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–≥–ª—É—à–∫—É
        return Mono.fromRunnable(() -> {
            log.info("–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {} –≤ —Å–µ—Å—Å–∏–∏ {} —Å –ø—Ä–æ–º–ø—Ç–æ–º: {}", userId, sessionId, prompt);
            // TODO: –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å FalAIService
        });
    }

    /**
     * –û—Ç–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.
     */
    private Mono<Void> sendWelcomeMessage(Long chatId, String username) {
        String message = String.format(
                "üéâ *–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ 24reshai, %s!*\n\n" +
                "üé® –í—ã –ø–æ–ª—É—á–∏–ª–∏ 6 –ø–æ–∏–Ω—Ç–æ–≤ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏!\n" +
                "üöÄ –¢–µ–ø–µ—Ä—å –º–æ–∂–µ—Ç–µ –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø—Ä—è–º–æ –∑–¥–µ—Å—å!\n\n" +
                "üìù *–ö–∞–∫ –Ω–∞—á–∞—Ç—å:*\n" +
                "‚Ä¢ –û—Ç–ø—Ä–∞–≤—å—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è\n" +
                "‚Ä¢ –ò–ª–∏ –ø—Ä–∏–ª–æ–∂–∏—Ç–µ —Ñ–æ—Ç–æ + –æ–ø–∏—Å–∞–Ω–∏–µ\n\n" +
                "üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /help –¥–ª—è —Å–ø—Ä–∞–≤–∫–∏",
                username
        );

        return sendMessage(chatId, message);
    }

    /**
     * –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.
     */
    public Mono<Void> sendMessage(Long chatId, String message) {
        // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π —á–µ—Ä–µ–∑ Telegram Bot API
        // –ü–æ–∫–∞ —á—Ç–æ –ø—Ä–æ—Å—Ç–æ –ª–æ–≥–∏—Ä—É–µ–º
        log.info("–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç {}: {}", chatId, message);
        return Mono.empty();
    }
}
