spring:
  profiles:
    active: prod
  r2dbc:
    url: r2dbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:postgres}?schema=${DB_SCHEMA:troyka}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    pool:
      initial-size: 5
      max-size: 10
  sql:
    init:
      platform: postgres
  webflux:
    client:
      connect-timeout: 5000
      response-timeout: 10000
    base-path: /api
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB
  jackson:
    default-property-inclusion: non_null
    serialization:
      write-dates-as-timestamps: false
    deserialization:
      fail-on-unknown-properties: false
  mail:
    host: ${SMTP_HOST:smtp.timeweb.ru}
    port: ${SMTP_PORT:587}
    username: ${SMTP_USERNAME:noreply@24reshai.ru}
    password: ${SMTP_PASSWORD:}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
          ssl:
            trust: smtp.timeweb.ru

server:
  port: 8080
  address: 0.0.0.0

logging:
  file:
    name: ${log_file_name:/var/log/troyka-back/application.log}
  logback:
    rollingpolicy:
      max-file-size: 10MB
      max-history: 30
  level:
    ru.oparin.troyka: ${log_level}
    org.springframework.r2dbc.core.DefaultDatabaseClient: ${sql_log_level:info}
    io.r2dbc.postgresql.Queries: ${sql_log_level:info}
    org.springframework.r2dbc: ${sql_log_level:info}

jwt:
  secret: ${JWT_SECRET}
  expiration: ${JWT_EXPIRATION:86400000}

# Fal.ai API configuration
fal:
  ai:
    api:
      key: ${fal_ai_api_key}
      url: https://fal.run
    model:
      create: nano-banana
      edit: nano-banana/edit
    timeout: 30000

# File storage configuration
file:
  upload-dir: ${UPLOAD_DIR:/var/www/uploads/}
  host: 213.171.4.47

# Application configuration
app:
  frontend:
    url: ${FRONTEND_URL:https://24reshai.ru}
  email:
    from: ${EMAIL_FROM:noreply@24reshai.ru}
    support: ${EMAIL_SUPPORT:support@24reshai.ru}